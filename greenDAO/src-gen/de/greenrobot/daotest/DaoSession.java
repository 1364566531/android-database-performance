package de.greenrobot.daotest;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import de.greenrobot.daotest.SimpleEntity;
import de.greenrobot.daotest.SimpleEntityNotNull;

import de.greenrobot.daotest.SimpleEntityDao;
import de.greenrobot.daotest.SimpleEntityNotNullDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig simpleEntityDaoConfig;
    private final DaoConfig simpleEntityNotNullDaoConfig;

    private final SimpleEntityDao simpleEntityDao;
    private final SimpleEntityNotNullDao simpleEntityNotNullDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        simpleEntityDaoConfig = daoConfigMap.get(SimpleEntityDao.class).clone();
        simpleEntityDaoConfig.initIdentityScope(type);

        simpleEntityNotNullDaoConfig = daoConfigMap.get(SimpleEntityNotNullDao.class).clone();
        simpleEntityNotNullDaoConfig.initIdentityScope(type);

        simpleEntityDao = new SimpleEntityDao(simpleEntityDaoConfig, this);
        simpleEntityNotNullDao = new SimpleEntityNotNullDao(simpleEntityNotNullDaoConfig, this);

        registerDao(SimpleEntity.class, simpleEntityDao);
        registerDao(SimpleEntityNotNull.class, simpleEntityNotNullDao);
    }
    
    public void clear() {
        simpleEntityDaoConfig.getIdentityScope().clear();
        simpleEntityNotNullDaoConfig.getIdentityScope().clear();
    }

    public SimpleEntityDao getSimpleEntityDao() {
        return simpleEntityDao;
    }

    public SimpleEntityNotNullDao getSimpleEntityNotNullDao() {
        return simpleEntityNotNullDao;
    }

}
